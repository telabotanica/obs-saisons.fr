{#
    *: required
    #: optionnal
    [int..int]: array indexes ([...] if no precise length defined)

    id*: int
    show*: bool
    canAdminStation*: bool
    listCard*: Object
        species*: Species
        individuals#: array
            [...] Individual
        eventsSpecies#: array
            [...] EventSpecies
        observations#: array
            [...] Observation
        allObsYears#: array
            [...] date(Y)

#}
{% set canAdminStation = app.user.id|default('none') == station.user.id or is_granted('ROLE_ADMIN') %}
{% set eventsSpecies = listCard.eventsSpecies %}
{% set periodsNames = constant('App\\Entity\\Event::DISPLAY_LABELS') %}
{% set stagesCssClasses = constant('App\\Entity\\Event::CSS_CLASSES') %}

{% set years = listCard.allObsYears %}
{% set first_year = max(years|default(["now"|date("Y")])) %}

<div class="periods-calendar" data-id="{{ id }}" style="display:none;">
    <div class="table-container">
        <div class="grid top">
            {# Display years dropdown menu #}
            <div class="grid_1-3_1-2 dropdown">
                <div class="dropdown-toggle" style="{{ years|length > 1 ? 'cursor: pointer;' }}">
                    <div class="active-year {{ years|length > 1 ? 'down-arrow-icon' }}">{{ first_year }}</div>
                </div>
                {% if years|length > 1 %}
                    <nav class="dropdown-list hidden" style="{{ "height: #{(years|length) - 1 * 45}px;" }}{{ years|length > 5 ? "overflow: scroll;" }}">
                        {% for year in years %}
                            <a href="" class="dropdown-link {{ year == first_year ? 'hidden' }}">{{ year }}</a>
                        {% endfor %}
                    </nav>
                {% endif %}
            </div>

            {# Display months #}
            {% for i in 3..14 %}
                {% set month = "0000-#{i - 2}-01"|localizeddate('none', 'none', 'fr', null, 'MMM')  %}
                <div class="grid_{{ "#{i}-#{i+1}" }}_1-2 month">{{ month }}</div>
                {% if month == ("now"|localizeddate('none', 'none', 'fr', null, 'MMM')) %}
                    <div class="grid_{{ "#{i}-#{i+1}" }}_1-2 table-colomn active-month top  {{ loop.last ? 'last-column' }}"></div>
                {% endif %}
            {% endfor %}
        </div>

        {% for individual in listCard.individuals %}
            {# Displays individual's name #}
            <div class="individu-header">
                <div class="individual">
                    <h5 class="individu-name">{{ individual.name|capitalize }}</h5>
                    {% if canAdminStation or individual.user.id == app.user.id|default %}
                        <a
                            href=""
                            class="add-button-like edit-individual edit open"
                            data-action-type="edit"
                            data-open="individual"
                            data-all-species="1"
                            style="margin-left: 1px"
                            data-individual="{{ individual|getJsonSerializedEditIndividual }}"
                        ></a>
                    {% endif %}
                </div>
                {% if show %}
                    <a href="" class="table-action open{{ disable ? ' disabled' }}" data-open="observation" data-individuals-ids="{{ individual.id }}" data-species="{{ individual.species.id }}" data-species-name="{{ individual.species.vernacularName }}" {{ disable ? 'style=cursor:not-allowed; aria-disabled=true title="connexion obligatoire"' }}>
                        <div>Saisir une observation</div>
                    </a>
                {% endif %}
            </div>

            <div class="grid content-{{ eventsSpecies|length }}">
                {% for i in 1..eventsSpecies|length %}
                    {% set stage = eventsSpecies[i-1] %}

                    {# Displays the calendar grid and lines titles #}
                    <div class="grid_1-3_{{ "#{i}-#{i+1}" }} table-intitule-stage {{ i is even ? 'darker' }} {{ loop.last ? 'last' }}">{{ periodsNames[stage.event.name] }}{{ stage.species.type.name == 'arbres' ? " - stade #{stage.event.stadeBbch}" }}</div>
                    <div class="grid_3-15_{{ "#{i}-#{i+1}" }} table-row {{ i is even ? 'darker' }} {{ loop.last ? 'last' }}"></div>

                    {# périods of less frequent observations#}
                    {% if stage.percentile5 is not empty and stage.percentile95 is not empty and stage.percentile5 != stage.percentile95 %}
                        {% set column_start = 30 + (stage.percentile5 * 120 / 365)|round %}
                        {% set column_end = 30 + (stage.percentile95 * 120 / 365)|round %}
                        {# Displays periods colored lines  opacity 0.3 #}
                        {% if column_start < column_end %}
                            <div class="stage-period {{ stagesCssClasses[stage.event.name] }}" style="{{ "grid-column-start:#{column_start};grid-column-end:#{column_end};grid-row-start:#{i};grid-row-end:#{i+1};" }}"></div>
                        {% else %}
                            <div class="stage-period {{ stagesCssClasses[stage.event.name] }}" style="{{ "grid-column-start:#{column_start};grid-column-end:150;grid-row-start:#{i};grid-row-end:#{i+1};" }}"></div>
                            <div class="stage-period {{ stagesCssClasses[stage.event.name] }}" style="{{ "grid-column-start:30;grid-column-end:#{column_end};grid-row-start:#{i};grid-row-end:#{i+1};" }}"></div>
                        {% endif %}
                    {% endif %}

                    {# périods of more frequent observations#}
                    {% if stage.percentile25 is not empty and stage.percentile75 is not empty and stage.percentile25 != stage.percentile75 %}
                        {% set column_start = 30 + (stage.percentile25 * 120 / 365)|round %}
                        {% set column_end = 30 + (stage.percentile75 * 120 / 365)|round %}
                        {# Displays periods colored lines opacity 1 #}
                        {% if column_start < column_end %}
                            <div class="stage-period {{ stagesCssClasses[stage.event.name] }}" style="{{ "grid-column-start:#{column_start};grid-column-end:#{column_end};grid-row-start:#{i};grid-row-end:#{i+1};opacity:1;" }}"></div>
                        {% else %}
                            <div class="stage-period {{ stagesCssClasses[stage.event.name] }}" style="{{ "grid-column-start:#{column_start};grid-column-end:150;grid-row-start:#{i};grid-row-end:#{i+1};opacity:1;" }}"></div>
                            <div class="stage-period {{ stagesCssClasses[stage.event.name] }}" style="{{ "grid-column-start:30;grid-column-end:#{column_end};grid-row-start:#{i};grid-row-end:#{i+1};opacity:1;" }}"></div>
                        {% endif %}
                    {% endif %}
                {% endfor %}

                {# Displays observations #}
                {% for obsChip in setObsChips(individual) %}
                    {% include 'components/obs_chips.html.twig' with {
                        observations: obsChip.observations,
                        isAnimal: (individual.species.type.reign != 'plantes'),
                        hide: (obsChip.year != first_year)
                    } %}
                {% endfor %}

                {# Highlights current month #}
                {% for i in 3..14 %}
                    <div class="grid_{{"#{i}-#{i+1}"}}_1-{{ eventsSpecies|length + 1 }} table-colomn {{ (i - 2) == ("now"|date('n')) ? 'active-month' }} {{ loop.last ? 'last-column' }}"></div>
                {% endfor %}
            </div>
        {% endfor %}

        <div class="individu-footer">
            <div class="table-mask-button">
                <div class="up-arrow-green-icon">Masquer le détail</div>
            </div>
            {% if show and listCard.species.type.reign == 'plantes' %}
                <a href="" class="table-action add open{{ disable ? ' disabled' }}" data-open="individual" data-species="{{ listCard.species.id }}" data-all-species="false" data-station="{{ station.id }}" data-req-login="true" {{ disable ? 'style=cursor:not-allowed; aria-disabled=true title="connexion obligatoire"' }}>
                    <div>Ajouter un nouvel individu</div>
                    <div class="add-button-like add-circle-icon"></div>
                </a>
            {% endif %}
        </div>
    </div>

    <div class="helper-legend">
        <div class="legends">
            {# Sets an array of non duplicated values of stages class attibutes for this species #}
            {% set stagesClassAttrs = stagesClassAttrs|default([])|merge(eventsSpecies|map(es => stagesCssClasses[es.event.name]))|removeDuplicates %}

            {# Displays periods colored lines legends #}
            {% for stageClassAttr in stagesClassAttrs %}
                <div class="stage-period {{stageClassAttr }} legend"></div>
            {% endfor %}
        </div>
        <div class="helper-legend-text">Périodes à laquelle est observée ce stade en moyenne les années précédentes</div>
        <a href="" class="hide-button eye-crossed-icon" title="Ne plus afficher ce message"></a>
    </div>
</div>