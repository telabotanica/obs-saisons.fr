
$third-pc: 100/3;

@mixin pointer {
	cursor: pointer;
	touch-action: manipulation;
}

@mixin green-text-semi-bold {
	color: $green;
	font-weight: 600;
}
/**************************************************
* HIDE
*************************************************/
%hide {
	display: none;
}

.hidden {
	display: none !important;
}
/**************************************************
* HELPER CLASSES
*************************************************/
.ods-inline-block {
	max-width: 100%;
	display: inline-block;
}



/******************************************/
/*           backgrounds                  */
/******************************************/
@function image-url($name, $extention: "svg", $depth: 1) {
	$url: "";
	@if $depth != 0 {
		$base: "../";
		@for $i from 1 through $depth {
			$url: $base + $url;
		}
	}
	@return url($url + "assets/" + quote($name + "." + $extention));
}

@mixin background-image($url: "default", $position: 0 0, $size: cover, $repeat: no-repeat) {
	@if $url == "default" {
		$url: image-url('image-placeholder', 'svg');
	}
	background-image: $url;
	background-position: $position;
	background-size: $size;
	background-repeat: $repeat;
}

.bg-default {
	@include background-image("default", 50% 50%);
}

/******************************************/
/*       paddings & margins               */
/******************************************/
@mixin gap($type, $directions, $size: 0){
	@if $directions == "v" {
		$directions: (top, bottom);
	}
	@else if $directions == "h" {
		$directions: (right, left)
	}
	@each $direction in $directions {
		#{$type}-#{$direction}: $size;
	}
}

@mixin padding-v($size) {
	padding-top: $size;
	padding-bottom: $size;
}

@mixin padding-h($size) {
	padding-left: $size;
	padding-right: $size;
}

@mixin margin-h($size) {
	margin-left: $size;
	margin-right: $size;
}

@mixin margin-v($size) {
	margin-top: $size;
	margin-bottom: $size;
}

/******************************************/
/*          width & height                */
/******************************************/
@mixin square-block($size, $prefix: null) {
	@if $prefix {
		$prefix: $prefix + "-";
	}
	#{$prefix}width: $size;
	#{$prefix}height: $size;
}

/******************************************/
/*           position                     */
/******************************************/
@mixin position($position: static, $top: auto, $right: auto, $bottom: auto, $left: auto, $z-index: auto) {
	position: $position;
	left: $left;
	top: $top;
	right: $right;
	bottom: $bottom;
	z-index: $z-index;
}

/********************************************/
/*            border                        */
/********************************************/
@mixin border($directions, $color, $style: solid, $width: 1px) {
	@if $directions == "v" {
		$directions: (top, bottom);
	}
	@else if $directions == "h" {
		$directions: (left, right);
	}
	@each $direction in $directions {
		border-#{$direction}-width: $width;
		border-#{$direction}-style: $style;
		border-#{$direction}-color: $color;
	}
}

/********************************************/
/*            DUAL BLOCKS
/********************************************/
@mixin squared-block-container($media-query) {
	$margin-values: (xs: 5px, sm: 30px, md: 0);
	@if $media-query == xs {
		@include display-flex-center;
	}
	margin-right: map_get($margin-values, $media-query);
}

@mixin squared-block-style($media-query) {
	@if $media-query == xs {
		@include background-image(null, 50% 50%, 20px 30px);
		position: relative;
		width: 40px;
		height: 65px;
		max-width: 100%;
		text-decoration: none;
	} @else if $media-query == sm {
		width: 50px;
		background-size: 30px;
	} @else if $media-query == md {
		width: 100px;
		margin-left: 0;
		border-radius: 0;
	} @else if $media-query == lg {
		width: 120px;
	}
}

.dual-blocks-container {
	@include squared-block-container(xs);
	@include flex-direction-row;

	@include media(sm) {
		@include squared-block-container(sm);
	}

	@include media(md) {
		@include squared-block-container(md);
		@include flex-direction-column;
	}
}

@mixin dual-block {
	@include display-flex-center;
	@include squared-block-style(xs);
	@include align-self-stretch;

	margin-left: 10px;
	border-radius: 4px;
	font-size: 14px;
	font-weight: 700;

	@include media(sm) {
		@include squared-block-style(sm);
		margin-left: 5px;
	}

	@include media(md) {
		@include flex-1;
		@include squared-block-style(md);
	}

	@include media(lg) {
		@include squared-block-style(lg);
	}

	&:last-child {
		@include media(xs,sm) {
			margin-left: 0;
		}

		@include media(sm) {
			background-size: 27px;
		}
	}
}

@mixin squared-block-label {
	@extend %hide;

	@include media(md) {
		@include position(absolute, 0, 0, 0, 0);
		@include display-flex-center;
		opacity: 0;
		-webkit-transition: opacity 200ms ease;
		transition: opacity 200ms ease;

		@include font_default_semi_bold;
		font-size: 13px;
		line-height: 20px;
		text-align: center;
		letter-spacing: 1px;
		text-transform: uppercase;
		border-radius: 1px;
	}

	&:hover {
		opacity: 1;
	}

	&.green {
		background-color: $green704555;
		@include green-text-semi-bold;
	}
}

/********************************************/
/*           member-avatar                  */
/********************************************/
@mixin member-avatar($size) {
	@include square-block($size);
	margin-right: 0;
	border: 2px solid #fff;
	border-radius: 50px;
	@include background-image("default", 50% 50%);
}

%member-avatar-sm {
	@include member-avatar(26px);
}

%member-avatar-md {
	@include member-avatar(50px);
}

/**************************************************
* FONT SIZE TOOLS
**************************************************/

@function rem($target, $context: $base_font_size) {
	@if $target == 0 {
		@return 0
	}
	@return $target / $context + 0rem;
}

/*************************************************
 * TOGGLE ELEMENT
 *************************************************/
.hide,
.hide * {
	opacity: 0 !important;
	width: 0 !important;
	height: 0 !important;
	min-height: 0 !important;
	padding: 0 !important;
	margin: 0 !important;
	border: 0 !important;
	color: transparent;
}

.toggle-visibility,
.toggle-visibility * {
	transition: 0.2s width, 0.2s height, 0.2s padding, 0.2s margin, 0.2s border;
}
